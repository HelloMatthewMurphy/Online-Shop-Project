/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MenuUI;

import Services.ReceiptDirector;
import Services.DetailedReceiptBuilder;
import Services.PrivateReceiptBuilder;
import Services.EcoFriendlyReceiptBuilder;
import Services.ShoppingBasket;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
/**
 *
 * @author Jack
 */
public class ReceiptUI extends javax.swing.JFrame {

    /**
     * Creates new form ReceiptUI
     */
    public ReceiptUI() {
        initComponents();
        this.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        DetailedReceipt = new javax.swing.JButton();
        PrivateReceipt = new javax.swing.JButton();
        EcoFriendlyReceipt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Which Type of receipt would you like?");

        DetailedReceipt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        DetailedReceipt.setText("Detailed");
        DetailedReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DetailedReceiptActionPerformed(evt);
            }
        });

        PrivateReceipt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        PrivateReceipt.setText("Private");
        PrivateReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrivateReceiptActionPerformed(evt);
            }
        });

        EcoFriendlyReceipt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        EcoFriendlyReceipt.setText("EcoFriendly");
        EcoFriendlyReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EcoFriendlyReceiptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(EcoFriendlyReceipt)
                        .addGap(41, 41, 41)
                        .addComponent(PrivateReceipt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(DetailedReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DetailedReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PrivateReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EcoFriendlyReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(83, 83, 83))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DetailedReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DetailedReceiptActionPerformed
        this.setVisible(false);
        DetailedReceiptBuilder detailedReceipt = new DetailedReceiptBuilder();
        ReceiptDirector.GetInstance().makeReceipt(detailedReceipt);
        String result = "";
        
        if(!detailedReceipt.getReceipt().GetUsername().equals("")){
            result += "Username:  " + detailedReceipt.getReceipt().GetUsername() + "\n";
        }
        if(!detailedReceipt.getReceipt().GetEmail().equals("")){
            result += "Email:  " + detailedReceipt.getReceipt().GetEmail() + "\n";
        }
        if(!detailedReceipt.getReceipt().GetPaymentDetails().equals("")){
            result += "PaymentDetails:  " + detailedReceipt.getReceipt().GetPaymentDetails() + "\n";
        }
        //*if(!detailedReceipt.getReceipt().GetDeliveryMethod().equals("")){
        //    result += "Delivery Location:  " + detailedReceipt.getReceipt().GetDeliveryMethod() + "\n";
        //}
        if(!detailedReceipt.getReceipt().GetPurchases().equals("")){
            result += "Purchases:  " + detailedReceipt.getReceipt().GetPurchases() + "\n";
        }
        
        JOptionPane.showMessageDialog(null,result, "Detailed Receipt", JOptionPane.INFORMATION_MESSAGE);
        ShoppingBasket.GetInstance().ClearBasket();
    }//GEN-LAST:event_DetailedReceiptActionPerformed

    private void PrivateReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrivateReceiptActionPerformed
        PrivateReceiptBuilder privateReceipt = new PrivateReceiptBuilder();
        ReceiptDirector.GetInstance().makeReceipt(privateReceipt);
        this.setVisible(false);
        String result = "";
        
        if(!privateReceipt.getReceipt().GetUsername().equals("")){
            result += "Username:  " + privateReceipt.getReceipt().GetUsername() + "\n";
        }
        if(!privateReceipt.getReceipt().GetEmail().equals("")){
            result += "Email:  " + privateReceipt.getReceipt().GetEmail() + "\n";
        }
        if(!privateReceipt.getReceipt().GetPaymentDetails().equals("")){
            result += "PaymentDetails:  " + privateReceipt.getReceipt().GetPaymentDetails() + "\n";
        }
        //*if(!detailedReceipt.getReceipt().GetDeliveryMethod().equals("")){
        //    result += "Delivery Location:  " + detailedReceipt.getReceipt().GetDeliveryMethod() + "\n";
        //}
        if(!privateReceipt.getReceipt().GetPurchases().equals("")){
            result += "Purchases:  " + privateReceipt.getReceipt().GetPurchases() + "\n";
        }
        
        JOptionPane.showMessageDialog(null,result, "Private Receipt", JOptionPane.INFORMATION_MESSAGE);
        ShoppingBasket.GetInstance().ClearBasket();
    }//GEN-LAST:event_PrivateReceiptActionPerformed

    private void EcoFriendlyReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EcoFriendlyReceiptActionPerformed
        EcoFriendlyReceiptBuilder ecoFriendlyReceipt = new EcoFriendlyReceiptBuilder();
        ReceiptDirector.GetInstance().makeReceipt(ecoFriendlyReceipt);
        this.setVisible(false);
        String result = "";
        
        if(!ecoFriendlyReceipt.getReceipt().GetUsername().equals("")){
            result += "Username:  " + ecoFriendlyReceipt.getReceipt().GetUsername() + "\n";
        }
        if(!ecoFriendlyReceipt.getReceipt().GetEmail().equals("")){
            result += "Email:  " + ecoFriendlyReceipt.getReceipt().GetEmail() + "\n";
        }
        if(!ecoFriendlyReceipt.getReceipt().GetPaymentDetails().equals("")){
            result += "PaymentDetails:  " + ecoFriendlyReceipt.getReceipt().GetPaymentDetails() + "\n";
        }
        //*if(!detailedReceipt.getReceipt().GetDeliveryMethod().equals("")){
        //    result += "Delivery Location:  " + detailedReceipt.getReceipt().GetDeliveryMethod() + "\n";
        //}
        if(!ecoFriendlyReceipt.getReceipt().GetPurchases().equals("")){
            result += "Purchases:  " + ecoFriendlyReceipt.getReceipt().GetPurchases() + "\n";
        }
        
        JOptionPane.showMessageDialog(null,result, "Eco Friendly Receipt", JOptionPane.INFORMATION_MESSAGE);
        ShoppingBasket.GetInstance().ClearBasket();
    }//GEN-LAST:event_EcoFriendlyReceiptActionPerformed

   
    public void run() {
        this.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DetailedReceipt;
    private javax.swing.JButton EcoFriendlyReceipt;
    private javax.swing.JButton PrivateReceipt;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
